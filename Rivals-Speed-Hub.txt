--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v6 = string.rep;
local v98 = table.concat;
local v193 = table.insert;
local v259 = math.ldexp;
local v111 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			local v90 = 0;
			while true do
				if (v90 == 0) then
					v19 = v0(v3(v30, 1, 1));
					return "";
				end
			end
		else
			local v91 = 0;
			local v92;
			while true do
				if (v91 == 0) then
					v92 = v2(v0(v30, 16));
					if v19 then
						local v120 = v6(v92, v19);
						v19 = nil;
						return v120;
					else
						return v92;
					end
					break;
				end
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v93 = 0 - 0;
			local v94;
			while true do
				if (v93 == (0 - 0)) then
					v94 = (v31 / ((3 - 1) ^ (v32 - ((8 - 6) - 1)))) % ((621 - ((672 - (32 + 85)) + 64)) ^ (((v33 - (1638 - (1523 + 114))) - (v32 - (932 - (857 + 74)))) + (1 - (0 + 0))));
					return v94 - (v94 % (1066 - (68 + 222 + 775)));
				end
			end
		else
			local v95 = ((1527 - (892 + 65)) - (367 + 201)) ^ (v32 - 1);
			return (((v31 % (v95 + v95)) >= v95) and (928 - (214 + 713))) or (0 - 0);
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35 = 0 - 0;
		local v36;
		local v37;
		while true do
			if (v35 == (0 - 0)) then
				v36, v37 = v1(v16, v18, v18 + ((259 + 93) - (87 + 263)));
				v18 = v18 + (182 - (67 + 113));
				v35 = 1 + 0;
			end
			if (v35 == (2 - 1)) then
				return (v37 * 256) + v36;
			end
		end
	end
	local function v23()
		local v38 = (0 - 0) - (1187 - (1069 + 118));
		local v39;
		local v40;
		local v41;
		local v42;
		while true do
			if (v38 == (953 - (802 + (340 - 190)))) then
				return (v42 * ((98808031 - 53638091) - 28392724)) + (v41 * (118879 - 53343)) + (v40 * (187 + 69)) + v39;
			end
			if (v38 == 0) then
				v39, v40, v41, v42 = v1(v16, v18, v18 + (1000 - (915 + 15 + 67)));
				v18 = v18 + (11 - 7);
				v38 = 1 + 0;
			end
		end
	end
	local function v24()
		local v43 = v23();
		local v44 = v23();
		local v45 = (1 + 0) - (0 - 0);
		local v46 = (v20(v44, 1 + 0, 811 - (368 + 423)) * ((6 - 4) ^ (50 - (10 + 8)))) + v43;
		local v47 = v20(v44, 80 - 59, 31);
		local v48 = ((v20(v44, 474 - (416 + 26)) == ((10 - 7) - 2)) and -(1 + 0)) or 1;
		if (v47 == (0 - 0)) then
			if (v46 == (438 - (145 + 293))) then
				return v48 * (430 - (44 + 386));
			else
				v47 = 1;
				v45 = 0;
			end
		elseif (v47 == (3533 - ((1857 - (814 + 45)) + (1202 - 714)))) then
			return ((v46 == (0 + 0 + 0)) and (v48 * ((1 + 0) / (772 - (201 + 571))))) or (v48 * NaN);
		end
		return v259(v48, v47 - 1023) * (v45 + (v46 / ((1140 - (116 + 1022)) ^ (216 - 164))));
	end
	local function v25(v49)
		local v50;
		if not v49 then
			v49 = v23();
			if (v49 == (0 + 0)) then
				return "";
			end
		end
		v50 = v3(v16, v18, (v18 + v49) - (886 - (261 + 624)));
		v18 = v18 + v49;
		local v51 = {};
		for v67 = 1 - 0, #v50 do
			v51[v67] = v2(v1(v3(v50, v67, v67)));
		end
		return v98(v51);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v52 = (function()
			return function(v96, v97, v98, v99, v100, v101, v102, v103, v104)
				local v105 = (function()
					return 0 + 0;
				end)();
				local v96 = (function()
					return;
				end)();
				local v97 = (function()
					return;
				end)();
				while true do
					local v113 = (function()
						return 0;
					end)();
					while true do
						if (v113 == (574 - (507 + 67))) then
							if ((1750 - (1013 + 736)) ~= v105) then
							else
								local v124 = (function()
									return 0 + 0;
								end)();
								while true do
									if (v124 ~= (0 - 0)) then
									else
										local v126 = (function()
											return 0;
										end)();
										while true do
											if (v126 ~= (0 - 0)) then
											else
												while true do
													if (v96 ~= (867 - (550 + 317))) then
													else
														v97 = (function()
															return v98();
														end)();
														if (v99(v97, #"!", #">") ~= 0) then
														else
															local v128 = (function()
																return 0 - 0;
															end)();
															local v129 = (function()
																return;
															end)();
															local v130 = (function()
																return;
															end)();
															local v131 = (function()
																return;
															end)();
															while true do
																if (v128 == (2 - 0)) then
																	if (v99(v130, #"\\", #"{") ~= #"]") then
																	else
																		v131[5 - 3] = (function()
																			return v102[v131[2]];
																		end)();
																	end
																	if (v99(v130, 287 - (134 + 151), 1667 - (970 + 695)) == #",") then
																		v131[#"xnx"] = (function()
																			return v102[v131[#"nil"]];
																		end)();
																	end
																	v128 = (function()
																		return 5 - 2;
																	end)();
																end
																if (v128 == (1991 - (582 + 1408))) then
																	local v420 = (function()
																		return 0 - 0;
																	end)();
																	local v421 = (function()
																		return;
																	end)();
																	while true do
																		if (v420 == 0) then
																			v421 = (function()
																				return 0;
																			end)();
																			while true do
																				if (v421 ~= 0) then
																				else
																					local v586 = (function()
																						return 0 - 0;
																					end)();
																					while true do
																						if (0 ~= v586) then
																						else
																							v131 = (function()
																								return {v100(),v100(),nil,nil};
																							end)();
																							if (v129 == (1824 - (1195 + 629))) then
																								local v593 = (function()
																									return 0 - 0;
																								end)();
																								while true do
																									if (v593 == 0) then
																										v131[#"19("] = (function()
																											return v100();
																										end)();
																										v131[#"?id="] = (function()
																											return v100();
																										end)();
																										break;
																									end
																								end
																							elseif (v129 == #">") then
																								v131[#"-19"] = (function()
																									return v101();
																								end)();
																							elseif (v129 == 2) then
																								v131[#"19("] = (function()
																									return v101() - ((243 - (187 + 54)) ^ 16);
																								end)();
																							elseif (v129 == #"19(") then
																								local v598 = (function()
																									return 780 - (162 + 618);
																								end)();
																								local v599 = (function()
																									return;
																								end)();
																								while true do
																									if (0 ~= v598) then
																									else
																										v599 = (function()
																											return 0 + 0;
																										end)();
																										while true do
																											if (v599 ~= 0) then
																											else
																												v131[#"-19"] = (function()
																													return v101() - (2 ^ 16);
																												end)();
																												v131[#"?id="] = (function()
																													return v100();
																												end)();
																												break;
																											end
																										end
																										break;
																									end
																								end
																							end
																							v586 = (function()
																								return 1;
																							end)();
																						end
																						if (v586 ~= 1) then
																						else
																							v421 = (function()
																								return 1 + 0;
																							end)();
																							break;
																						end
																					end
																				end
																				if (v421 ~= 1) then
																				else
																					v128 = (function()
																						return 3 - 1;
																					end)();
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																if (v128 ~= (0 - 0)) then
																else
																	local v422 = (function()
																		return 0 + 0;
																	end)();
																	local v423 = (function()
																		return;
																	end)();
																	while true do
																		if (v422 ~= 0) then
																		else
																			v423 = (function()
																				return 0;
																			end)();
																			while true do
																				if (0 ~= v423) then
																				else
																					v129 = (function()
																						return v99(v97, 2, #"-19");
																					end)();
																					v130 = (function()
																						return v99(v97, #".dev", 6);
																					end)();
																					v423 = (function()
																						return 1;
																					end)();
																				end
																				if (v423 ~= 1) then
																				else
																					v128 = (function()
																						return 1637 - (1373 + 263);
																					end)();
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																if (v128 ~= (1003 - (451 + 549))) then
																else
																	if (v99(v130, #"19(", #"xxx") ~= #"!") then
																	else
																		v131[#"0313"] = (function()
																			return v102[v131[#"0313"]];
																		end)();
																	end
																	v103[v104] = (function()
																		return v131;
																	end)();
																	break;
																end
															end
														end
														break;
													end
												end
												return v96, v97, v98, v99, v100, v101, v102, v103, v104;
											end
										end
									end
								end
							end
							if (v105 ~= (0 + 0)) then
							else
								v96 = (function()
									return 0;
								end)();
								v97 = (function()
									return nil;
								end)();
								v105 = (function()
									return 1 - 0;
								end)();
							end
							break;
						end
					end
				end
			end;
		end)();
		local v53 = (function()
			return function(v106, v107, v108)
				local v109 = (function()
					return 0;
				end)();
				local v110 = (function()
					return;
				end)();
				while true do
					if (v109 ~= 0) then
					else
						v110 = (function()
							return 0 - 0;
						end)();
						while true do
							if (v110 == 0) then
								v106[v107 - #":"] = (function()
									return v108();
								end)();
								return v106, v107, v108;
							end
						end
						break;
					end
				end
			end;
		end)();
		local v54 = (function()
			return {};
		end)();
		local v55 = (function()
			return {};
		end)();
		local v56 = (function()
			return {};
		end)();
		local v57 = (function()
			return {v54,v55,nil,v56};
		end)();
		local v58 = (function()
			return v23();
		end)();
		local v59 = (function()
			return {};
		end)();
		for v69 = #"\\", v58 do
			local v70 = (function()
				return 1384 - (746 + 638);
			end)();
			local v71 = (function()
				return;
			end)();
			local v72 = (function()
				return;
			end)();
			local v73 = (function()
				return;
			end)();
			while true do
				if (v70 == 0) then
					v71 = (function()
						return 0 + 0;
					end)();
					v72 = (function()
						return nil;
					end)();
					v70 = (function()
						return 1;
					end)();
				end
				if (v70 ~= (1 - 0)) then
				else
					v73 = (function()
						return nil;
					end)();
					while true do
						if (v71 == (342 - (218 + 123))) then
							if (v72 == #"|") then
								v73 = (function()
									return v21() ~= 0;
								end)();
							elseif (v72 == (1583 - (1535 + 46))) then
								v73 = (function()
									return v24();
								end)();
							elseif (v72 ~= #"91(") then
							else
								v73 = (function()
									return v25();
								end)();
							end
							v59[v69] = (function()
								return v73;
							end)();
							break;
						end
						if (v71 == (0 + 0)) then
							local v122 = (function()
								return 0;
							end)();
							local v123 = (function()
								return;
							end)();
							while true do
								if (v122 == (0 + 0)) then
									v123 = (function()
										return 0;
									end)();
									while true do
										if (v123 ~= 0) then
										else
											local v127 = (function()
												return 0;
											end)();
											while true do
												if ((561 - (306 + 254)) == v127) then
													v123 = (function()
														return 1;
													end)();
													break;
												end
												if ((0 + 0) ~= v127) then
												else
													v72 = (function()
														return v21();
													end)();
													v73 = (function()
														return nil;
													end)();
													v127 = (function()
														return 1;
													end)();
												end
											end
										end
										if (1 == v123) then
											v71 = (function()
												return 1;
											end)();
											break;
										end
									end
									break;
								end
							end
						end
					end
					break;
				end
			end
		end
		v57[#"xnx"] = (function()
			return v21();
		end)();
		for v74 = #" ", v23() do
			FlatIdent_24A02, Descriptor, v21, v20, v22, v23, v59, v54, v74 = (function()
				return v52(FlatIdent_24A02, Descriptor, v21, v20, v22, v23, v59, v54, v74);
			end)();
		end
		for v75 = #"]", v23() do
			v55, v75, v28 = (function()
				return v53(v55, v75, v28);
			end)();
		end
		return v57;
	end
	local function v29(v61, v62, v63)
		local v64 = v61[1 - 0];
		local v65 = v61[1469 - (899 + 568)];
		local v66 = v61[3];
		return function(...)
			local v76 = v64;
			local v77 = v65;
			local v78 = v66;
			local v79 = v27;
			local v80 = 1 + 0;
			local v81 = -(2 - 1);
			local v82 = {};
			local v83 = {...};
			local v84 = v12("#", ...) - 1;
			local v85 = {};
			local v86 = {};
			for v111 = 290 - (60 + 230), v84 do
				if (v111 >= v78) then
					v82[v111 - v78] = v83[v111 + 1];
				else
					v86[v111] = v83[v111 + (573 - (426 + 146))];
				end
			end
			local v87 = (v84 - v78) + 1 + 0;
			local v88;
			local v89;
			while true do
				local v112 = (2824 - (34 + 1334)) - (282 + 1174);
				while true do
					if (v112 == (811 - (219 + 350 + 242))) then
						v88 = v76[v80];
						v89 = v88[2 - 1];
						v112 = 1 + 0;
					end
					if (v112 == (1025 - (706 + 318))) then
						if ((v89 <= (1322 - (721 + 530))) or (1662 <= 525)) then
							if (v89 <= (1306 - (945 + 326))) then
								if (v89 <= (41 - 24)) then
									if ((v89 <= (8 + 0)) or (876 > 2550)) then
										if (v89 <= (703 - (271 + 334 + 95))) then
											if (v89 <= (1 + 0)) then
												if (v89 == 0) then
													v86[v88[1502 - (1408 + 92)]] = v86[v88[1089 - (461 + 625)]] * v88[1292 - (993 + 295)];
												else
													local v133 = v88[1 + 1];
													local v134 = {};
													for v319 = 1172 - (418 + 753), #v85 do
														local v320 = (1283 - (1035 + 248)) + 0;
														local v321;
														while true do
															if (v320 == (0 + 0)) then
																v321 = v85[v319];
																for v523 = 0 + 0, #v321 do
																	local v524 = v321[v523];
																	local v525 = v524[22 - (20 + 1)];
																	local v526 = v524[1 + 1];
																	if ((v525 == v86) and (v526 >= v133)) then
																		local v562 = 529 - (406 + 123);
																		while true do
																			if ((219 <= 2456) and (v562 == (1769 - (1749 + 20)))) then
																				v134[v526] = v525[v526];
																				v524[1 + 0 + 0] = v134;
																				break;
																			end
																		end
																	end
																end
																break;
															end
														end
													end
												end
											elseif ((v89 > 2) or (4219 == 1150)) then
												local v135 = v88[1324 - (1249 + 73)];
												local v136, v137 = v79(v86[v135](v13(v86, v135 + 1 + 0, v88[(1467 - (134 + 185)) - (466 + 679)])));
												v81 = (v137 + v135) - (2 - 1);
												local v138 = 0 - 0;
												for v322 = v135, v81 do
													v138 = v138 + (1901 - (106 + 1794));
													v86[v322] = v136[v138];
												end
											else
												local v139 = v88[1 + 2];
												local v140 = v86[v139];
												for v325 = v139 + 1 + 0, v88[(1144 - (549 + 584)) - 7] do
													v140 = v140 .. v86[v325];
												end
												v86[v88[5 - (688 - (314 + 371))]] = v140;
											end
										elseif ((v89 <= (119 - (4 + 110))) or (2989 <= 222)) then
											if (v89 == 4) then
												local v142 = 584 - (57 + 527);
												local v143;
												while true do
													if (v142 == (1427 - (41 + 1386))) then
														v143 = v88[(360 - 255) - (17 + (1054 - (478 + 490)))];
														v86[v143] = v86[v143](v13(v86, v143 + 1 + 0, v88[6 - 3]));
														break;
													end
												end
											else
												local v144 = 0 - 0;
												local v145;
												local v146;
												local v147;
												while true do
													if (v144 == 0) then
														v145 = v88[168 - (65 + 57 + 44)];
														v146 = v86[v145];
														v144 = 1 - (1172 - (786 + 386));
													end
													if ((2258 > 1241) and (v144 == (3 - 2))) then
														v147 = v88[(9 - 6) + 0];
														for v468 = 1 + 0, v147 do
															v146[v468] = v86[v145 + v468];
														end
														break;
													end
												end
											end
										elseif ((41 < 4259) and (v89 <= (11 - 5))) then
											v86[v88[2]] = v88[68 - (30 + 35)];
										elseif (v89 > (5 + 2)) then
											v86[v88[1259 - (1043 + 214)]] = v88[11 - 8] + v86[v88[4]];
										else
											v86[v88[1214 - (323 + 889)]][v86[v88[7 - 4]]] = v86[v88[584 - (361 + 219)]];
										end
									elseif (v89 <= (332 - (53 + (1646 - (1055 + 324))))) then
										if (v89 <= 10) then
											if ((v89 == (3 + 6)) or (1930 < 56)) then
												v86[v88[1342 - (1093 + 247)]][v86[v88[416 - (15 + 398)]]] = v86[v88[986 - (16 + 2 + 964)]];
											elseif ((3333 == 3333) and (v86[v88[7 - 5]] < v88[1 + 3])) then
												v80 = v80 + (3 - 2) + 0;
											else
												v80 = v88[2 + 1];
											end
										elseif (v89 > (861 - (20 + (2816 - 1986)))) then
											v86[v88[2 + 0]] = v86[v88[129 - (116 + 10)]] % v88[1 + 3];
										else
											v86[v88[740 - (542 + 196)]]();
										end
									elseif ((v89 <= (29 - (42 - 27))) or (2225 == 20)) then
										if (v89 == (4 + 9)) then
											local v153 = 0 + 0;
											local v154;
											local v155;
											while true do
												if (v153 == 1) then
													for v471 = v154 + 1 + 0, v81 do
														v193(v155, v86[v471]);
													end
													break;
												end
												if ((v153 == (0 - 0)) or (872 >= 3092)) then
													v154 = v88[4 - 2];
													v155 = v86[v154];
													v153 = 1;
												end
											end
										else
											local v156 = v88[2];
											local v157 = v88[1555 - (1126 + 425)];
											local v158 = v156 + (407 - (118 + 287));
											local v159 = {v86[v156](v86[v156 + 1], v86[v158])};
											for v326 = 1122 - (118 + 1003), v157 do
												v86[v158 + v326] = v159[v326];
											end
											local v160 = v159[2 - 1];
											if v160 then
												local v356 = 377 - (142 + 235);
												while true do
													if (v356 == (0 - 0)) then
														v86[v158] = v160;
														v80 = v88[1 + (4 - 2)];
														break;
													end
												end
											else
												v80 = v80 + 1;
											end
										end
									elseif ((4404 >= 3252) and (v89 <= (992 - (553 + 424)))) then
										if not v86[v88[3 - 1]] then
											v80 = v80 + 1;
										else
											v80 = v88[3 + 0 + 0];
										end
									elseif (v89 == ((61 - 45) + 0)) then
										local v358 = 0 + 0;
										local v359;
										while true do
											if ((1107 > 796) and ((0 + 0) == v358)) then
												v359 = v88[6 - 4];
												do
													return v13(v86, v359, v81);
												end
												break;
											end
										end
									elseif (v86[v88[2 + 0 + 0]] <= v88[8 - 4]) then
										v80 = v80 + (2 - 1);
									else
										v80 = v88[3];
									end
								elseif (v89 <= (58 - 32)) then
									if (v89 <= (7 + 14)) then
										if (v89 <= 19) then
											if (v89 == (86 - 68)) then
												local v161 = 753 - (239 + 514);
												local v162;
												local v163;
												local v164;
												while true do
													if ((0 + 0) == v161) then
														v162 = v77[v88[1332 - (797 + 532)]];
														v163 = nil;
														v161 = 1 + 0;
													end
													if (v161 == (1 + 0)) then
														v164 = {};
														v163 = v10({}, {__index=function(v473, v474)
															local v475 = v164[v474];
															return v475[2 - 1][v475[1204 - (373 + 829)]];
														end,__newindex=function(v476, v477, v478)
															local v479 = 731 - (476 + 255);
															local v480;
															while true do
																if (v479 == (1130 - (369 + 761))) then
																	v480 = v164[v477];
																	v480[1 + 0][v480[2 - 0]] = v478;
																	break;
																end
															end
														end});
														v161 = 2;
													end
													if (v161 == (3 - 1)) then
														for v481 = 239 - (64 + 174), v88[(2 - 1) + 3] do
															v80 = v80 + (1 - 0);
															local v482 = v76[v80];
															if ((959 == 959) and (v482[337 - (144 + 192)] == (333 - ((100 - 58) + 174)))) then
																v164[v481 - 1] = {v86,v482[3]};
															else
																v164[v481 - (1 + 0)] = {v62,v482[1583 - (1183 + 397)]};
															end
															v85[#v85 + (2 - 1)] = v164;
														end
														v86[v88[2 + 0]] = v29(v162, v163, v63);
														break;
													end
												end
											else
												local v165 = v88[2];
												v86[v165] = v86[v165](v13(v86, v165 + 1, v88[3]));
											end
										elseif (v89 > (15 + 5)) then
											v86[v88[(656 + 1321) - (1913 + (259 - 197))]] = v88[3] * v86[v88[(4 - 1) + 1]];
										else
											local v168 = 0;
											local v169;
											local v170;
											local v171;
											while true do
												if (v168 == 1) then
													v171 = v86[v169 + (5 - 3)];
													if (v171 > 0) then
														if ((v170 > v86[v169 + (1934 - (565 + 1368))]) or (245 >= 2204)) then
															v80 = v88[11 - 8];
														else
															v86[v169 + (1664 - (1477 + 184))] = v170;
														end
													elseif ((3162 >= 2069) and (v170 < v86[v169 + 1])) then
														v80 = v88[(8 - 5) - 0];
													else
														v86[v169 + (1271 - (1249 + 19)) + 0] = v170;
													end
													break;
												end
												if (v168 == 0) then
													v169 = v88[2];
													v170 = v86[v169];
													v168 = 857 - (564 + 292);
												end
											end
										end
									elseif (v89 <= (38 - 15)) then
										if ((v89 == (20 + 2)) or (306 > 3081)) then
											local v172 = 0 - 0;
											local v173;
											while true do
												if (0 == v172) then
													v173 = v88[306 - (244 + 60)];
													v86[v173](v13(v86, v173 + 1 + (0 - 0), v81));
													break;
												end
											end
										elseif ((v86[v88[478 - (41 + 435)]] ~= v88[4]) or (3513 < 2706)) then
											v80 = v80 + (1002 - (938 + 63));
										else
											v80 = v88[3 + 0];
										end
									elseif (v89 <= (1149 - (936 + 189))) then
										local v174 = (1086 - (686 + 400)) + 0;
										local v175;
										while true do
											if (v174 == (1613 - (1565 + 48))) then
												v175 = v88[2 + 0 + 0];
												v86[v175](v86[v175 + 1]);
												break;
											end
										end
									elseif ((2978 < 3639) and (v89 > (1163 - (782 + 356)))) then
										v86[v88[2]] = -v86[v88[270 - (176 + 91)]];
									else
										v86[v88[4 - 2]] = v86[v88[4 - (230 - (73 + 156))]] % v86[v88[1096 - (975 + 117)]];
									end
								elseif (v89 <= (1905 - (157 + 1718))) then
									if ((3682 >= 2888) and (v89 <= 28)) then
										if (v89 > (22 + 5)) then
											v86[v88[2]] = v86[v88[10 - 7]] * v86[v88[13 - 9]];
										else
											local v177 = 1018 - (697 + 321);
											local v178;
											local v179;
											local v180;
											while true do
												if ((149 < 479) and (v177 == (0 - 0))) then
													v178 = v88[(1 + 2) - 1];
													v179 = {v86[v178](v86[v178 + 1])};
													v177 = 1 + 0;
												end
												if (v177 == (1 - (811 - (721 + 90)))) then
													v180 = 0 - 0;
													for v484 = v178, v88[1231 - (322 + 905)] do
														v180 = v180 + 1;
														v86[v484] = v179[v180];
													end
													break;
												end
											end
										end
									elseif (v89 == (1 + 28)) then
										if (v86[v88[613 - (602 + 9)]] <= v88[1193 - (449 + 740)]) then
											v80 = v80 + (873 - (826 + 46));
										else
											v80 = v88[950 - (245 + 702)];
										end
									elseif ((1020 >= 567) and (v88[2] < v86[v88[12 - 8]])) then
										v80 = v80 + 1 + (0 - 0);
									else
										v80 = v88[1901 - (260 + 1638)];
									end
								elseif (v89 <= (472 - (382 + 58))) then
									if (v89 > (99 - 68)) then
										v86[v88[2 + 0]] = v86[v88[5 - 2]] * v86[v88[4]];
									else
										v86[v88[5 - 3]] = v86[v88[1208 - (902 + 303)]] - v88[8 - (474 - (224 + 246))];
									end
								elseif ((v89 <= 33) or (733 > 2469)) then
									v80 = v88[6 - 3];
								elseif ((2497 == 2497) and (v89 > (3 + 31))) then
									local v365 = 1690 - (1121 + (921 - 352));
									local v366;
									while true do
										if ((3901 == 3901) and (v365 == (214 - (22 + 192)))) then
											v366 = v88[685 - ((888 - 405) + 37 + 163)];
											v86[v366](v13(v86, v366 + (1464 - (1404 + 59)), v88[8 - 5]));
											break;
										end
									end
								else
									v86[v88[2 - 0]] = v86[v88[1 + 2]] - v86[v88[4]];
								end
							elseif ((201 < 415) and (v89 <= ((601 + 217) - (468 + 297)))) then
								if (v89 <= (606 - (334 + 228))) then
									if (v89 <= (131 - 92)) then
										if (v89 <= (85 - 48)) then
											if (v89 > (64 - (55 - 27))) then
												v86[v88[1 + 1]][v88[239 - (141 + (316 - 221))]] = v88[(517 - (203 + 310)) + 0];
											else
												v62[v88[7 - 4]] = v86[v88[1995 - (1238 + 755)]];
											end
										elseif ((v89 > (3 + 35)) or (133 == 1784)) then
											local v188 = v88[2];
											local v189 = {v86[v188](v86[v188 + 1 + 0])};
											local v190 = 0 - 0;
											for v329 = v188, v88[3 + 1] do
												v190 = v190 + 1 + 0;
												v86[v329] = v189[v190];
											end
										else
											local v191 = (0 - 0) - 0;
											local v192;
											local v193;
											local v194;
											local v195;
											while true do
												if (v191 == (0 + 0)) then
													v192 = v88[165 - (92 + 71)];
													v193, v194 = v79(v86[v192](v86[v192 + 1]));
													v191 = 1 + 0;
												end
												if (v191 == (1 - 0)) then
													v81 = (v194 + v192) - (766 - (574 + 191));
													v195 = (864 - (196 + 668)) + (0 - 0);
													v191 = 4 - 2;
												end
												if (2 == v191) then
													for v487 = v192, v81 do
														local v488 = 0;
														while true do
															if ((v488 == (0 + 0)) or (7 >= 310)) then
																v195 = v195 + (850 - (254 + 595));
																v86[v487] = v193[v195];
																break;
															end
														end
													end
													break;
												end
											end
										end
									elseif (v89 <= 41) then
										if (v89 > (166 - (55 + 71))) then
											local v196 = v88[3 - 0];
											local v197 = v86[v196];
											for v332 = v196 + (1791 - ((1186 - 613) + 1217)), v88[10 - 6] do
												v197 = v197 .. v86[v332];
											end
											v86[v88[(834 - (171 + 662)) + 1]] = v197;
										else
											local v199 = v88[2 - 0];
											local v200 = {v86[v199](v13(v86, v199 + (940 - (714 + 225)), v81))};
											local v201 = (93 - (4 + 89)) - 0;
											for v333 = v199, v88[4] do
												v201 = v201 + (1 - 0);
												v86[v333] = v200[v201];
											end
										end
									elseif (v89 <= ((17 - 12) + 37)) then
										for v336 = v88[2 - 0], v88[809 - (43 + 75 + 688)] do
											v86[v336] = nil;
										end
									elseif (v89 > (91 - (25 + 23))) then
										local v368 = 0 + (0 - 0);
										local v369;
										while true do
											if (v368 == (1886 - (927 + 959))) then
												v369 = v88[6 - 4];
												v86[v369] = v86[v369]();
												break;
											end
										end
									elseif (v88[734 - (7 + 9 + (2202 - (35 + 1451)))] == v86[v88[7 - 3]]) then
										v80 = v80 + (98 - (11 + (1539 - (28 + 1425))));
									else
										v80 = v88[6 - 3];
									end
								elseif (v89 <= (333 - ((2168 - (941 + 1052)) + 110))) then
									if (v89 <= (115 - 69)) then
										if ((4992 > 286) and (v89 > ((212 + 9) - 176))) then
											local v202 = v88[1798 - (503 + 1293)];
											v86[v202] = v86[v202]();
										else
											v86[v88[5 - 3]] = {};
										end
									elseif (v89 == (34 + 13)) then
										v86[v88[1063 - (810 + 251)]] = not v86[v88[3]];
									elseif (v88[2 + 0] <= v86[v88[2 + 2]]) then
										v80 = v80 + 1 + 0;
									else
										v80 = v88[1517 - (822 + 692)];
									end
								elseif ((v89 <= (583 - (43 + 490))) or (2561 == 3893)) then
									if (v89 == 49) then
										local v206 = v88[735 - (711 + 22)];
										v86[v206](v86[v206 + (3 - 2)]);
									elseif ((4362 >= 1421) and (v86[v88[861 - (240 + 619)]] < v88[1 + 3])) then
										v80 = v80 + 1;
									else
										v80 = v88[4 - 1];
									end
								elseif (v89 <= (4 + 47)) then
									if ((75 <= 3546) and (v86[v88[1746 - ((1918 - 574) + 400)]] ~= v88[409 - (255 + 150)])) then
										v80 = v80 + 1;
									else
										v80 = v88[2 + 1 + 0];
									end
								elseif (v89 == 52) then
									local v373 = v88[2 + 0];
									local v374 = {v86[v373](v13(v86, v373 + 1, v88[9 - 6]))};
									local v375 = 1739 - (404 + 1335);
									for v441 = v373, v88[410 - (183 + 223)] do
										local v442 = 0 - 0;
										while true do
											if (v442 == (0 + 0)) then
												v375 = v375 + 1 + 0;
												v86[v441] = v374[v375];
												break;
											end
										end
									end
								else
									do
										return;
									end
								end
							elseif (v89 <= (399 - (10 + (624 - (45 + 252))))) then
								if (v89 <= 57) then
									if ((2680 <= 3418) and (v89 <= (39 + 16))) then
										if (v89 > (392 - (118 + 220))) then
											v86[v88[1 + 1]] = v88[3] ^ v86[v88[453 - (108 + 341)]];
										else
											v86[v88[1 + 1]] = v86[v88[12 - 9]] + v86[v88[1497 - (711 + 782)]];
										end
									elseif ((v89 > (107 - (51 + 0))) or (4288 < 2876)) then
										v86[v88[471 - (270 + 199)]] = {};
									elseif (v88[1 + 1] <= v86[v88[1823 - (580 + 1239)]]) then
										v80 = v80 + (2 - 1);
									else
										v80 = v88[3 + 0 + 0];
									end
								elseif ((2462 >= 1147) and (v89 <= 59)) then
									if (v89 > (141 - 83)) then
										local v210 = 0 + 0;
										local v211;
										local v212;
										local v213;
										while true do
											if (v210 == (1 + 0)) then
												v213 = {};
												v212 = v10({}, {__index=function(v490, v491)
													local v492 = v213[v491];
													return v492[1][v492[4 - 2]];
												end,__newindex=function(v493, v494, v495)
													local v496 = v213[v494];
													v496[1 + 0][v496[1169 - (645 + 522)]] = v495;
												end});
												v210 = (2225 - (114 + 319)) - (1010 + 780);
											end
											if (v210 == ((0 - 0) + 0)) then
												v211 = v77[v88[3]];
												v212 = nil;
												v210 = (4 - 0) - 3;
											end
											if ((v210 == (5 - 3)) or (4914 < 2480)) then
												for v498 = 1, v88[1840 - (1045 + 791)] do
													v80 = v80 + (2 - 1);
													local v499 = v76[v80];
													if ((v499[1 - 0] == (622 - (351 + 154))) or (1559 == 1240)) then
														v213[v498 - (1575 - (1281 + 293))] = {v86,v499[3]};
													else
														v213[v498 - 1] = {v62,v499[3 + 0]};
													end
													v85[#v85 + 1 + 0] = v213;
												end
												v86[v88[1 + (1 - 0)]] = v29(v211, v212, v63);
												break;
											end
										end
									else
										v63[v88[10 - 7]] = v86[v88[3 - 1]];
									end
								elseif (v89 <= (32 + 28)) then
									if ((566 == 566) and (v86[v88[472 - (381 + 89)]] == v88[4 + 0])) then
										v80 = v80 + (1964 - (556 + 1407)) + 0;
									else
										v80 = v88[4 - 1];
									end
								elseif (v89 > 61) then
									local v378 = 1156 - (1074 + 82);
									while true do
										if (v378 == (0 - 0)) then
											v86[v88[1786 - (214 + 1570)]] = v88[3] ~= (1455 - ((2196 - (741 + 465)) + 465));
											v80 = v80 + 1 + 0;
											break;
										end
									end
								elseif (v86[v88[1 + 1]] == v86[v88[4]]) then
									v80 = v80 + 1 + 0;
								else
									v80 = v88[11 - 8];
								end
							elseif (v89 <= (1792 - (1668 + 58))) then
								if (v89 <= 64) then
									if ((3921 >= 3009) and (v89 == (689 - (512 + 114)))) then
										do
											return v86[v88[5 - 3]];
										end
									else
										local v216 = v88[3 - 1];
										local v217 = {v86[v216](v13(v86, v216 + 1 + 0, v88[1 + 2]))};
										local v218 = 0;
										for v338 = v216, v88[4 + 0] do
											v218 = v218 + (3 - 2);
											v86[v338] = v217[v218];
										end
									end
								elseif ((2063 >= 1648) and (v89 > (2059 - (109 + 1885)))) then
									v86[v88[2]] = -v86[v88[1472 - (1269 + 200)]];
								else
									v86[v88[3 - 1]][v88[818 - (98 + 717)]] = v88[830 - ((1267 - (170 + 295)) + 13 + 11)];
								end
							elseif (v89 <= (117 - 49)) then
								if (v89 > 67) then
									if ((1066 >= 452) and (v88[(2 + 0) - 0] < v86[v88[(2 - 1) + 3]])) then
										v80 = v80 + 1 + 0;
									else
										v80 = v88[1 + 2];
									end
								else
									v86[v88[1 + 0 + 1]] = v88[8 - 5] ~= (0 - 0);
								end
							elseif (v89 <= (25 + 44)) then
								v86[v88[1 + 1]][v86[v88[3 + 0]]] = v88[3 + 1];
							elseif (v89 == 70) then
								if (v86[v88[2]] <= v86[v88[4]]) then
									v80 = v80 + 1;
								else
									v80 = v88[2 + 1];
								end
							else
								local v380 = 0 + 0;
								local v381;
								local v382;
								local v383;
								while true do
									if (v380 == (1433 - (797 + 636))) then
										v381 = v88[9 - 7];
										v382 = v86[v381];
										v380 = 1620 - (1427 + 192);
									end
									if ((1 + 0) == v380) then
										v383 = v88[2 + (1231 - (957 + 273))];
										for v557 = 2 - 1, v383 do
											v382[v557] = v86[v381 + v557];
										end
										break;
									end
								end
							end
						elseif ((4974 >= 2655) and (v89 <= (97 + 10))) then
							if (v89 <= (41 + 48)) then
								if (v89 <= (406 - (192 + 134))) then
									if (v89 <= 75) then
										if (v89 <= 73) then
											if ((v89 == (1348 - (316 + 960))) or (2721 <= 907)) then
												local v225 = v88[2 + 0];
												local v226 = v86[v225];
												for v341 = v225 + 1 + 0, v81 do
													v193(v226, v86[v341]);
												end
											else
												local v227 = 0 + 0;
												local v228;
												local v229;
												while true do
													if (v227 == (3 - 2)) then
														v86[v228 + 1] = v229;
														v86[v228] = v229[v88[555 - (83 + 468)]];
														break;
													end
													if (v227 == 0) then
														v228 = v88[1808 - (1202 + 604)];
														v229 = v86[v88[3]];
														v227 = 4 - 3;
													end
												end
											end
										elseif ((4437 >= 3031) and (v89 > 74)) then
											local v230 = v88[(1 + 1) - 0];
											do
												return v13(v86, v230, v81);
											end
										else
											local v231 = v86[v88[10 - 6]];
											if v231 then
												v80 = v80 + 1;
											else
												v86[v88[327 - (45 + 280)]] = v231;
												v80 = v88[3 + 0 + 0];
											end
										end
									elseif ((v89 <= 77) or (4470 < 2949)) then
										if (v89 > (67 + 9)) then
											local v232 = 0 + 0;
											local v233;
											local v234;
											local v235;
											local v236;
											while true do
												if (v232 == (1 + 0)) then
													v81 = (v235 + v233) - 1;
													v236 = 0;
													v232 = 1 + 1;
												end
												if (v232 == (3 - (3 - 2))) then
													for v503 = v233, v81 do
														local v504 = 1911 - (340 + 1571);
														while true do
															if (v504 == 0) then
																v236 = v236 + 1;
																v86[v503] = v234[v236];
																break;
															end
														end
													end
													break;
												end
												if ((v232 == 0) or (1580 == 2426)) then
													v233 = v88[2];
													v234, v235 = v79(v86[v233](v13(v86, v233 + (2 - 1) + 0, v81)));
													v232 = 1773 - (1733 + 39);
												end
											end
										elseif ((v88[2] == v86[v88[10 - (18 - 12)]]) or (3711 == 503)) then
											v80 = v80 + (1035 - (125 + 909));
										else
											v80 = v88[1951 - (1096 + 852)];
										end
									elseif (v89 <= ((173 - 138) + 43)) then
										if ((v86[v88[2 - 0]] <= v86[v88[4]]) or (420 == 4318)) then
											v80 = v80 + 1 + 0;
										else
											v80 = v88[515 - (409 + 103)];
										end
									elseif (v89 == 79) then
										local v388 = 236 - (46 + 190);
										local v389;
										while true do
											if (v388 == 0) then
												v389 = v88[97 - ((1831 - (389 + 1391)) + 44)];
												v86[v389] = v86[v389](v13(v86, v389 + 1 + 0, v81));
												break;
											end
										end
									else
										v63[v88[1320 - (1114 + 203)]] = v86[v88[728 - (228 + 498)]];
									end
								elseif (v89 <= (19 + 65)) then
									if (v89 <= (46 + 36)) then
										if (v89 > (744 - (110 + 64 + 489))) then
											for v342 = v88[(1 + 4) - 3], v88[3] do
												v86[v342] = nil;
											end
										else
											v86[v88[1907 - (830 + 1075)]]();
										end
									elseif (v89 == (607 - (303 + 221))) then
										v86[v88[1271 - (231 + 1038)]] = v86[v88[(6 - 3) + 0]] + v88[1166 - ((1122 - (783 + 168)) + 991)];
									else
										v86[v88[(26 - 18) - 6]] = v62[v88[7 - 4]];
									end
								elseif (v89 <= (214 - 128)) then
									if ((v89 == 85) or (4158 <= 33)) then
										if not v86[v88[2 + 0]] then
											v80 = v80 + (3 - 2);
										else
											v80 = v88[8 - 5];
										end
									else
										local v240 = 0 - 0;
										local v241;
										while true do
											if (v240 == (0 - (0 + 0))) then
												v241 = v88[1250 - (111 + 1137)];
												do
													return v86[v241](v13(v86, v241 + (159 - ((402 - (309 + 2)) + 67)), v88[3]));
												end
												break;
											end
										end
									end
								elseif (v89 <= 87) then
									local v242 = (0 - 0) - 0;
									local v243;
									local v244;
									while true do
										if ((0 + 0) == v242) then
											v243 = v88[525 - (423 + 100)];
											v244 = v86[v243];
											v242 = 1;
										end
										if (v242 == (1 + 0)) then
											for v505 = v243 + (2 - 1), v88[2 + 1] do
												v193(v244, v86[v505]);
											end
											break;
										end
									end
								elseif (v89 == (859 - ((1538 - (1090 + 122)) + 445))) then
									v86[v88[8 - 6]] = not v86[v88[(2 + 4) - 3]];
								else
									local v394 = v88[4 - (6 - 4)];
									do
										return v13(v86, v394, v394 + v88[714 - (530 + 124 + 57)]);
									end
								end
							elseif ((v89 <= (979 - (614 + (1385 - (628 + 490))))) or (99 > 4744)) then
								if (v89 <= (125 - (19 + 13))) then
									if (v89 <= 91) then
										if (v89 > 90) then
											v86[v88[2 - 0]] = v86[v88[3]] % v88[4];
										else
											v86[v88[2]] = v63[v88[6 - 3]];
										end
									elseif ((4341 == 4341) and (v89 == (262 - 170))) then
										local v248 = 0 + 0;
										local v249;
										local v250;
										local v251;
										local v252;
										while true do
											if ((255 <= 1596) and (v248 == (3 - 1))) then
												for v506 = v249, v81 do
													v252 = v252 + (1 - 0);
													v86[v506] = v250[v252];
												end
												break;
											end
											if ((v248 == (1813 - (1293 + 519))) or (4433 < 1635)) then
												v81 = (v251 + v249) - (1 - 0);
												v252 = (0 + 0) - 0;
												v248 = 2;
											end
											if (((0 - 0) - 0) == v248) then
												v249 = v88[8 - 6];
												v250, v251 = v79(v86[v249](v86[v249 + (2 - 1)]));
												v248 = 1;
											end
										end
									else
										v86[v88[2 + 0]] = v86[v88[1 + 2]][v88[4]];
									end
								elseif (v89 <= (220 - 125)) then
									if ((v89 > (22 + 72)) or (4300 < 3244)) then
										local v255 = 0 + 0;
										local v256;
										local v257;
										local v258;
										while true do
											if ((v255 == (0 + 0)) or (3534 > 4677)) then
												v256 = v88[1098 - (709 + 387)];
												v257 = v86[v256];
												v255 = 1;
											end
											if ((v255 == (1859 - (673 + 1185))) or (4859 < 2999)) then
												v258 = v86[v256 + (5 - (13 - 10))];
												if ((4726 > 2407) and (v258 > 0)) then
													if ((v257 > v86[v256 + (3 - 2)]) or (1284 > 3669)) then
														v80 = v88[(778 - (431 + 343)) - 1];
													else
														v86[v256 + 3 + 0] = v257;
													end
												elseif (v257 < v86[v256 + 1 + 0]) then
													v80 = v88[3 - 0];
												else
													v86[v256 + 1 + 2] = v257;
												end
												break;
											end
										end
									elseif (v86[v88[3 - 1]] ~= v86[v88[7 - 3]]) then
										v80 = v80 + (1881 - ((900 - 454) + 1434));
									else
										v80 = v88[1286 - (1040 + 243)];
									end
								elseif ((1117 < 2549) and (v89 <= (286 - 190))) then
									local v259 = v88[1849 - (559 + 1288)];
									local v260 = {};
									for v344 = 1, #v85 do
										local v345 = 1931 - (609 + 1322);
										local v346;
										while true do
											if (v345 == (454 - (13 + 441))) then
												v346 = v85[v344];
												for v539 = 0 - 0, #v346 do
													local v540 = 0 - 0;
													local v541;
													local v542;
													local v543;
													while true do
														if (((0 - 0) - 0) == v540) then
															v541 = v346[v539];
															v542 = v541[1 + 0];
															v540 = 3 - 2;
														end
														if ((1 + 0) == v540) then
															v543 = v541[1 + 1];
															if (((v542 == v86) and (v543 >= v259)) or (2851 > 4774)) then
																v260[v543] = v542[v543];
																v541[1 + 0] = v260;
															end
															break;
														end
													end
												end
												break;
											end
										end
									end
								elseif (v89 == (287 - 190)) then
									v86[v88[1 + 1 + 0]] = v88[3] ~= 0;
								else
									v86[v88[3 - 1]] = v88[2 + 1] ~= (0 + 0);
									v80 = v80 + 1;
								end
							elseif (v89 <= ((1769 - (556 + 1139)) + (43 - (6 + 9)))) then
								if (v89 <= (84 + 16)) then
									if (v89 == (97 + 2)) then
										v86[v88[435 - (153 + 280)]] = v86[v88[3]] % v86[v88[11 - 7]];
									else
										v86[v88[2]] = v86[v88[3 + 0]][v88[2 + 2]];
									end
								elseif ((1031 < 3848) and (v89 == 101)) then
									v86[v88[2 + 0]] = v88[3] + v86[v88[4 + 0]];
								else
									v62[v88[3]] = v86[v88[2]];
								end
							elseif ((1854 > 903) and (v89 <= 104)) then
								if (v89 > 103) then
									local v267 = 0 + 0;
									local v268;
									local v269;
									local v270;
									while true do
										if (v267 == (0 - 0)) then
											v268 = v88[2 + 0];
											v269 = v86[v268 + (669 - (89 + 578))];
											v267 = 1 + 0 + 0;
										end
										if ((3 - 1) == v267) then
											if (v269 > (0 + 0)) then
												if (v270 <= v86[v268 + (1050 - (572 + 477))]) then
													v80 = v88[3];
													v86[v268 + 1 + 2] = v270;
												end
											elseif ((4663 > 1860) and (v270 >= v86[v268 + (170 - (28 + 141)) + 0])) then
												v80 = v88[1 + 2];
												v86[v268 + (89 - (84 + 2))] = v270;
											end
											break;
										end
										if (v267 == 1) then
											v270 = v86[v268] + v269;
											v86[v268] = v270;
											v267 = 2 - 0;
										end
									end
								elseif ((v86[v88[2 + 0]] == v86[v88[846 - (497 + 345)]]) or (3053 <= 469)) then
									v80 = v80 + 1 + 0;
								else
									v80 = v88[1 + 2];
								end
							elseif (v89 <= (1438 - (605 + 728))) then
								v86[v88[1 + 1 + 0]][v88[6 - (3 - 0)]] = v86[v88[1 + 3]];
							elseif (v89 == (391 - (202 + 83))) then
								if (v86[v88[2 + 0]] or (540 >= 1869)) then
									v80 = v80 + 1;
								else
									v80 = v88[7 - 4];
								end
							else
								local v399 = v88[2];
								v86[v399] = v86[v399](v13(v86, v399 + 1 + 0, v81));
							end
						elseif (v89 <= 125) then
							if (v89 <= (605 - (457 + 32))) then
								if ((3292 == 3292) and (v89 <= ((1365 - (486 + 831)) + 63))) then
									if ((1038 <= 2645) and (v89 <= 109)) then
										if ((v89 == 108) or (3230 < 2525)) then
											local v273 = v88[1404 - (832 + 570)];
											local v274 = {v86[v273](v13(v86, v273 + 1 + 0, v81))};
											local v275 = 0;
											for v347 = v273, v88[13 - 9] do
												local v348 = 0 + (0 - 0);
												while true do
													if (v348 == (796 - (588 + 208))) then
														v275 = v275 + (2 - 1);
														v86[v347] = v274[v275];
														break;
													end
												end
											end
										else
											v86[v88[1802 - (884 + 916)]] = v86[v88[6 - 3]] / v88[3 + 1];
										end
									elseif (v89 > (763 - (232 + 421))) then
										local v277 = 1889 - (1569 + 320);
										local v278;
										while true do
											if ((v277 == (0 + 0)) or (2400 > 4083)) then
												v278 = v88[2];
												v86[v278] = v86[v278](v86[v278 + 1 + 0]);
												break;
											end
										end
									else
										local v279 = 0;
										local v280;
										while true do
											if (v279 == ((0 + 0) - 0)) then
												v280 = v86[v88[4]];
												if v280 then
													v80 = v80 + (606 - (316 + 289));
												else
													v86[v88[5 - 3]] = v280;
													v80 = v88[(3 - 2) + (1265 - (668 + 595))];
												end
												break;
											end
										end
									end
								elseif (v89 <= (1566 - (666 + 787))) then
									if (v89 == (537 - (360 + 65))) then
										v86[v88[2]] = v86[v88[3 + 0]];
									else
										v86[v88[256 - (79 + 175)]] = v86[v88[4 - 1]] + v88[4 + 0];
									end
								elseif (v89 <= ((315 + 34) - 235)) then
									do
										return;
									end
								elseif (v89 > (24 + 91)) then
									local v401 = v88[3 - 1];
									do
										return v86[v401](v13(v86, v401 + (900 - (503 + 396)), v88[184 - (92 + 89)]));
									end
								else
									v86[v88[3 - 1]] = v62[v88[2 + 1]];
								end
							elseif (v89 <= (72 + 48)) then
								if (v89 <= (462 - 344)) then
									if ((v89 == (16 + 101)) or (2745 > 4359)) then
										v86[v88[2]] = v86[v88[(16 - 10) - 3]];
									else
										local v286 = 0 + 0;
										local v287;
										local v288;
										local v289;
										local v290;
										while true do
											if (v286 == (1 + 1)) then
												for v513 = v287, v81 do
													v290 = v290 + (2 - 1);
													v86[v513] = v288[v290];
												end
												break;
											end
											if ((172 <= 1810) and (v286 == (0 + 0))) then
												v287 = v88[2 - 0];
												v288, v289 = v79(v86[v287](v13(v86, v287 + (1245 - (485 + 759)), v81)));
												v286 = 2 - (291 - (23 + 267));
											end
											if (v286 == 1) then
												v81 = (v289 + v287) - (1190 - (442 + 747));
												v290 = 1944 - (1129 + 815);
												v286 = 1137 - (832 + 303);
											end
										end
									end
								elseif (v89 > (1065 - (88 + 858))) then
									v86[v88[1 + 1]] = #v86[v88[3 + 0]];
								elseif (v86[v88[(388 - (371 + 16)) + 1]] ~= v86[v88[793 - (766 + 23)]]) then
									v80 = v80 + (4 - 3);
								else
									v80 = v88[3 - 0];
								end
							elseif (v89 <= (321 - 199)) then
								if (v89 > 121) then
									v86[v88[6 - 4]] = v29(v77[v88[3]], nil, v63);
								else
									v86[v88[1075 - (1036 + 37)]] = v88[3 + 0] ^ v86[v88[7 - 3]];
								end
							elseif (v89 <= (97 + 26)) then
								v86[v88[(3232 - (1326 + 424)) - (641 + 839)]][v88[916 - (910 + 3)]] = v86[v88[4]];
							elseif (v89 > (315 - 191)) then
								if (v86[v88[(3192 - 1506) - (1466 + 218)]] < v86[v88[4]]) then
									v80 = v80 + 1 + 0;
								else
									v80 = v88[3];
								end
							else
								local v405 = 1148 - (556 + 592);
								local v406;
								while true do
									if (v405 == (0 + 0)) then
										v406 = v88[2];
										v86[v406](v13(v86, v406 + (809 - (329 + 479)), v88[857 - (174 + 680)]));
										break;
									end
								end
							end
						elseif (v89 <= 134) then
							if ((v89 <= (442 - 313)) or (492 >= 4959)) then
								if ((v89 <= (263 - 136)) or (756 == 2072)) then
									if (v89 > 126) then
										if (v86[v88[2 + 0]] == v88[743 - (396 + 343)]) then
											v80 = v80 + 1 + 0;
										else
											v80 = v88[1480 - (29 + 1448)];
										end
									else
										v86[v88[2]] = v86[v88[1392 - (135 + 1254)]] + v86[v88[14 - (36 - 26)]];
									end
								elseif ((1605 <= 4664) and (v89 > (597 - 469))) then
									v86[v88[2 + 0]][v86[v88[1530 - (389 + 1138)]]] = v88[578 - (102 + 472)];
								else
									v86[v88[2 + (118 - (88 + 30))]] = v86[v88[2 + (772 - (720 + 51))]] - v86[v88[4 + 0]];
								end
							elseif (v89 <= (1676 - (320 + 1225))) then
								if (v89 == (231 - 101)) then
									v86[v88[(4 - 2) + 0]] = #v86[v88[3]];
								else
									v86[v88[1466 - (157 + 1307)]] = v88[1862 - ((2597 - (421 + 1355)) + 1038)] * v86[v88[9 - 5]];
								end
							elseif (v89 <= 132) then
								if (v86[v88[2]] < v86[v88[(1 - 0) + 3]]) then
									v80 = v80 + (1 - 0);
								else
									v80 = v88[2 + 1];
								end
							elseif (v89 > (329 - 196)) then
								v86[v88[1028 - (834 + 192)]] = v63[v88[1 + 2]];
							else
								local v411 = 0 + 0;
								local v412;
								while true do
									if ((1816 == 1816) and (v411 == (0 + 0))) then
										v412 = v88[2 - 0];
										v86[v412] = v86[v412](v86[v412 + (305 - (300 + 4))]);
										break;
									end
								end
							end
						elseif (v89 <= 138) then
							if (v89 <= (37 + 99)) then
								if ((v89 > (353 - 218)) or (621 > 3100)) then
									local v302 = v88[364 - (112 + 250)];
									local v303 = v86[v88[3]];
									v86[v302 + 1 + 0] = v303;
									v86[v302] = v303[v88[2 + 2]];
								else
									local v307 = v88[4 - 2];
									local v308 = v86[v307 + 2];
									local v309 = v86[v307] + v308;
									v86[v307] = v309;
									if (v308 > (0 + 0)) then
										if (v309 <= v86[v307 + 1]) then
											local v517 = 0 + 0;
											while true do
												if ((v517 == 0) or (1157 >= 4225)) then
													v80 = v88[3];
													v86[v307 + (1086 - (286 + 797)) + (0 - 0)] = v309;
													break;
												end
											end
										end
									elseif ((v309 >= v86[v307 + 1 + 0]) or (4986 == 4138)) then
										v80 = v88[3];
										v86[v307 + 3 + 0] = v309;
									end
								end
							elseif ((v89 > (1551 - (1001 + 413))) or (2033 <= 224)) then
								if v86[v88[4 - 2]] then
									v80 = v80 + (883 - (244 + 638));
								else
									v80 = v88[696 - (627 + 66)];
								end
							else
								local v311 = v88[5 - (4 - 1)];
								local v312 = v88[(1045 - (397 + 42)) - (512 + 90)];
								local v313 = v311 + 2;
								local v314 = {v86[v311](v86[v311 + (718 - (373 + 344))], v86[v313])};
								for v349 = 1 + 0, v312 do
									v86[v313 + v349] = v314[v349];
								end
								local v315 = v314[1];
								if (v315 or (1223 == 2011)) then
									local v414 = 0;
									while true do
										if (0 == v414) then
											v86[v313] = v315;
											v80 = v88[1 + 2];
											break;
										end
									end
								else
									v80 = v80 + (2 - 1);
								end
							end
						elseif (v89 <= (236 - 96)) then
							if ((4827 > 4695) and (v89 == (1238 - (35 + 1064)))) then
								do
									return v86[v88[2 + 0]];
								end
							else
								v86[v88[4 - 2]] = v88[3];
							end
						elseif ((3710 > 3065) and (v89 <= (1 + 140))) then
							v86[v88[1238 - (298 + 938)]] = v86[v88[1262 - (233 + 1026)]] / v88[1670 - (636 + 1030)];
						elseif (v89 == (73 + 22 + 47)) then
							local v415 = v88[(802 - (24 + 776)) + 0];
							local v416, v417 = v79(v86[v415](v13(v86, v415 + 1 + 0, v88[(1 - 0) + 2])));
							v81 = (v417 + v415) - (222 - (55 + 166));
							local v418 = (785 - (222 + 563)) + 0;
							for v465 = v415, v81 do
								local v466 = 0 + 0;
								while true do
									if (v466 == (0 - 0)) then
										v418 = v418 + (298 - (36 + 261));
										v86[v465] = v416[v418];
										break;
									end
								end
							end
						else
							v80 = v88[3];
						end
						v80 = v80 + 1;
						break;
					end
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv111(), ...);